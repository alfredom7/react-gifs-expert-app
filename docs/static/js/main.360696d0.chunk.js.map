{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","onSubmit","class","type","value","onChange","target","className","placeholder","aria-label","aria-describedby","onClick","id","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","src","alt","href","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAQxCC,EAAe,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,MAAI,CAAEP,MACzBC,EAAc,MAKtB,OACI,0BAAMO,SAAWN,GACb,yBAAKO,MAAM,oBACX,2BAAOC,KAAK,OAAOC,MAAQX,EAAaY,SAjBtB,SAAET,GACxBF,EAAeE,EAAEU,OAAOF,QAgBmDG,UAAU,eAAeC,YAAY,sBAAsBC,aAAW,uBAAuBC,mBAAiB,kBACrL,4BAAQC,QAAUhB,EAAeY,UAAU,kBAAkBJ,KAAK,SAASS,GAAG,iBAA9E,a,uBCtBCC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHZ,GAAIY,EAAIZ,GACRa,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPM,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAEjC,OACI,yBAAKT,UAAU,mCACX,yBAAKA,UAAU,iFACf,yBAAKsB,IAAMb,EAAMc,IAAML,EAAQlB,UAAU,0BACzC,yBAAKA,UAAU,yBACX,uBAAGA,UAAU,yDAA0DkB,GACvE,uBAAGM,KAAK,IAAIxB,UAAU,0BAAtB,cCNHyB,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdtB,mBAAS,CAC/B6B,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GAEHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAACnB,IAKGoB,EDrB0BK,CAAczB,GAAlCY,EAFwB,EAE7BL,KAAaY,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAI1B,UAAU,0CAAd,gBAAsEO,EAAtE,KAEEmB,GAAW,uBAAG1B,UAAU,oCAAb,WAEb,yBAAKA,UAAU,iBAGPmB,EAAOH,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIgB,IAAMhB,EAAIZ,IACLY,UEhBpBiB,EAAe,WAAO,IAAD,EAEMjD,mBAAS,CAAC,WAFhB,mBAEvBkD,EAFuB,KAEXnD,EAFW,KAI9B,OACI,yBAAKgB,UAAU,aACX,wBAAIA,UAAU,WAAd,gBACA,sEACA,kBAAC,EAAD,CAAahB,cAAgBA,IAC7B,6BAIQmD,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI0B,IAAM1B,EACNA,SAAWA,S,MCbvC6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.360696d0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState(''); // ''\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue ] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <div class=\"input-group mb-3\">\n            <input type=\"text\" value={ inputValue } onChange={ handleInputChange } className=\"form-control\" placeholder=\"Write for search...\" aria-label=\"Write for search...e\" aria-describedby=\"button-addon2\"/>\n            <button onClick={ handleSubmit } className=\"btn btn-success\" type=\"button\" id=\"button-addon2\">Search</button>\n            </div>\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=9m3M3LGVlTSihu4761MWxhbgHN3K9oLQ`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className='col-md-4 col-lg-3 col-xl-2 pb-3'>\n            <div className=\"card text-white bg-dark animate__animated animate__fadeIn shadow-sm rounded-3\">\n            <img src={ url } alt={ title } className=\"card-img-top img-grid\"/>\n            <div className=\"card-body text-center\">\n                <p className=\"card-title img-my-title text-capitalize text-truncate\">{ title }</p>\n                <a href=\"#\" className=\"btn btn-success btn-sm\">Select</a>\n            </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h6 className=\"animate__animated animate__fadeIn pb-2\">Results for: { category } </h6>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid row\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}\n\n\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['Vegeta']);\n\n    return (\n        <div className='container'>\n            <h2 className='fw-bold'>GifExpertApp</h2>\n            <pre>Created By: Alfredo Medina with React</pre>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n\n                {\n                    categories.map( category  => (\n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}